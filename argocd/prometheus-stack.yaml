apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-stack
  namespace: argocd
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  project: system-monitoring
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 31.0.0
    helm:
      skipCrds: true
      values: |
        grafana:
          enabled: true
          serviceMonitor:
            enable: true
          adminPassword: admin
          ingress:
            enabled: true
            hosts:
              - grafana.127.0.0.1.nip.io
          sidecar:
            dashboards:
              searchNamespace: ALL
            enableUniqueFilenames: true
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
              - name: Loki
                type: loki
                access: proxy
                url: http://loki.logging.svc:3100
                jsonData:
                  maxLines: 1000
              - name: Tempo
                type: tempo
                access: proxy
                url: http://tempo.tracing.svc:3100
              - name: 'Jaeger (Tempo)'
                type: jaeger
                access: proxy
                orgId: 1
                url: http://tempo.tracing.svc:16686
                basicAuth: false
                isDefault: false
                version: 1
                editable: false
                apiVersion: 1
                uid: jaeger-tempo
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
              - name: 'system'
                orgId: 1
                folder: 'System'
                type: file
                disableDeletion: false
                editable: true
                options:
                  path: /var/lib/grafana/dashboards/system
          dashboards:
            system:
              ingress:
                gnetId: 9614
                revision: 1
                datasource: Prometheus
              Node-exporter-full:
                gnetId: 1860
                revision: 27
                datasource: Prometheus  
              kube-state-metrics-v2:
                gnetId: 13332
                revision: 12
                datasource: Prometheus
              prometheus-2.0:
                gnetId: 3662
                revision: 2
                datasource: Prometheus
              promtail-2.4.x:
                gnetId: 15443
                revision: 2
                datasource: Prometheus                
        prometheus:
          enabled: true
          ingress:
            enabled: yes
            hosts:
              - prometheus.127.0.0.1.nip.io
          prometheusSpec:
            podMonitorSelectorNilUsesHelmValues: false
            serviceMonitorSelectorNilUsesHelmValues: false
            ruleSelectorNilUsesHelmValues: false
        #    scrapeInterval: 5s
        #    scrapeTimeout: 5s
        #
        kubeStateMetrics:
          enabled: true
        nodeExporter:
          enabled: true
        alertmanager:
          enabled: false
        kubeApiServer:
          enabled: false
        kubelet:
          enabled: true
        kubeProxy:
          enabled: false
        kubeControllerManager:
          enabled: false
        coreDns:
          enabled: false
        kubeScheduler:
          enabled: false
        kubeEtcd:
          enabled: false
