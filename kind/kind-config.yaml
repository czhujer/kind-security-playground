# nonk8s
---
apiVersion: kind.x-k8s.io/v1alpha4
kind: Cluster
networking:
  apiServerAddress: "0.0.0.0"
  disableDefaultCNI: true
featureGates:
  EphemeralContainers: true
  SeccompDefault: true
  ServerSideApply: true
  PodSecurity: true # migration from PodSecurityPolicy to PSS/PSA

# add to the apiServer certSANs the name of the docker (dind) service in order to be able to reach the cluster through it
#kubeadmConfigPatchesJSON6902:
#  - group: kubeadm.k8s.io
#    version: v1beta3
#    kind: ClusterConfiguration
#    patch: |
#      - op: add
#        path: /apiServer/certSANs/-
#        value: 172.17.0.1

# patch the generated kubeadm config with some extra settings
kubeadmConfigPatches:
  - |
    apiVersion: kubeadm.k8s.io/v1beta3
    kind: ClusterConfiguration
    metadata:
      name: config
    apiServer:
      extraArgs:
        # for PSS/PSA defaulting
#        admission-control-config-file: "/kube-config/kind-admissionconfiguration.yaml"
#        # for PSP
#        enable-admission-plugins: NodeRestriction,PodSecurityPolicy

nodes:
  - role: control-plane
    extraMounts:
      # for SPO
      - hostPath: /proc
        containerPath: /hostproc
      # allow Falco to use devices provided by the kernel module
      - hostPath: /dev
        containerPath: /dev
      # allow Falco to use the Docker unix socket
      - hostPath: /var/run/docker.sock
        containerPath: /var/run/docker.sock
      # modify static manifests and admission config
      - hostPath: /tmp/kind/kubeadm-configs
        containerPath: /kubeadm-configs
        readOnly: true
      - hostPath: /tmp/kind/kubeadm-patches
        containerPath: /kubeadm-patches
        readOnly: true
    kubeadmConfigPatches:
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "ingress-ready=true"
            seccomp-default: "true"
            feature-gates: "SeccompDefault=true"
        # change static manifests for control plane pods
        patches:
          directory: /kubeadm-patches
    extraPortMappings:
      - containerPort: 80
        hostPort: 80
        protocol: TCP
      - containerPort: 443
        hostPort: 443
        protocol: TCP
#  - role: control-plane
#  - role: control-plane
#  - role: worker

